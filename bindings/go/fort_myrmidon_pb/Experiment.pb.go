// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: Experiment.proto

package fort_myrmidon_pb

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AntShapeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AntShapeType) Reset() {
	*x = AntShapeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Experiment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntShapeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntShapeType) ProtoMessage() {}

func (x *AntShapeType) ProtoReflect() protoreflect.Message {
	mi := &file_Experiment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntShapeType.ProtoReflect.Descriptor instead.
func (*AntShapeType) Descriptor() ([]byte, []int) {
	return file_Experiment_proto_rawDescGZIP(), []int{0}
}

func (x *AntShapeType) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AntShapeType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Experiment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author                 string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Comment                string               `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Tagfamily              TagFamily            `protobuf:"varint,5,opt,name=tagfamily,proto3,enum=fort.myrmidon.pb.TagFamily" json:"tagfamily,omitempty"`
	Threshold              uint32               `protobuf:"varint,6,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Tagsize                float64              `protobuf:"fixed64,7,opt,name=tagsize,proto3" json:"tagsize,omitempty"`
	CustomMeasurementTypes []*MeasurementType   `protobuf:"bytes,21,rep,name=customMeasurementTypes,proto3" json:"customMeasurementTypes,omitempty"`
	Antshapetypes          []*AntShapeType      `protobuf:"bytes,31,rep,name=antshapetypes,proto3" json:"antshapetypes,omitempty"`
	Antmetadata            []*AntMetadataColumn `protobuf:"bytes,41,rep,name=antmetadata,proto3" json:"antmetadata,omitempty"`
}

func (x *Experiment) Reset() {
	*x = Experiment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Experiment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experiment) ProtoMessage() {}

func (x *Experiment) ProtoReflect() protoreflect.Message {
	mi := &file_Experiment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experiment.ProtoReflect.Descriptor instead.
func (*Experiment) Descriptor() ([]byte, []int) {
	return file_Experiment_proto_rawDescGZIP(), []int{1}
}

func (x *Experiment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Experiment) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Experiment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Experiment) GetTagfamily() TagFamily {
	if x != nil {
		return x.Tagfamily
	}
	return TagFamily_UNSET
}

func (x *Experiment) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Experiment) GetTagsize() float64 {
	if x != nil {
		return x.Tagsize
	}
	return 0
}

func (x *Experiment) GetCustomMeasurementTypes() []*MeasurementType {
	if x != nil {
		return x.CustomMeasurementTypes
	}
	return nil
}

func (x *Experiment) GetAntshapetypes() []*AntShapeType {
	if x != nil {
		return x.Antshapetypes
	}
	return nil
}

func (x *Experiment) GetAntmetadata() []*AntMetadataColumn {
	if x != nil {
		return x.Antmetadata
	}
	return nil
}

var File_Experiment_proto protoreflect.FileDescriptor

var file_Experiment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x54, 0x61, 0x67, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0c,
	0x41, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xad, 0x03, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e,
	0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x09, 0x74, 0x61, 0x67, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x67, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x74, 0x61, 0x67, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e,
	0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x6e, 0x74, 0x73, 0x68, 0x61, 0x70, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6e,
	0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x6e, 0x74, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x6e, 0x74,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x0b, 0x61, 0x6e, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Experiment_proto_rawDescOnce sync.Once
	file_Experiment_proto_rawDescData = file_Experiment_proto_rawDesc
)

func file_Experiment_proto_rawDescGZIP() []byte {
	file_Experiment_proto_rawDescOnce.Do(func() {
		file_Experiment_proto_rawDescData = protoimpl.X.CompressGZIP(file_Experiment_proto_rawDescData)
	})
	return file_Experiment_proto_rawDescData
}

var file_Experiment_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_Experiment_proto_goTypes = []interface{}{
	(*AntShapeType)(nil),      // 0: fort.myrmidon.pb.AntShapeType
	(*Experiment)(nil),        // 1: fort.myrmidon.pb.Experiment
	(TagFamily)(0),            // 2: fort.myrmidon.pb.TagFamily
	(*MeasurementType)(nil),   // 3: fort.myrmidon.pb.MeasurementType
	(*AntMetadataColumn)(nil), // 4: fort.myrmidon.pb.AntMetadataColumn
}
var file_Experiment_proto_depIdxs = []int32{
	2, // 0: fort.myrmidon.pb.Experiment.tagfamily:type_name -> fort.myrmidon.pb.TagFamily
	3, // 1: fort.myrmidon.pb.Experiment.customMeasurementTypes:type_name -> fort.myrmidon.pb.MeasurementType
	0, // 2: fort.myrmidon.pb.Experiment.antshapetypes:type_name -> fort.myrmidon.pb.AntShapeType
	4, // 3: fort.myrmidon.pb.Experiment.antmetadata:type_name -> fort.myrmidon.pb.AntMetadataColumn
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_Experiment_proto_init() }
func file_Experiment_proto_init() {
	if File_Experiment_proto != nil {
		return
	}
	file_TagFamily_proto_init()
	file_Measurement_proto_init()
	file_AntMetadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Experiment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntShapeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Experiment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experiment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Experiment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Experiment_proto_goTypes,
		DependencyIndexes: file_Experiment_proto_depIdxs,
		MessageInfos:      file_Experiment_proto_msgTypes,
	}.Build()
	File_Experiment_proto = out.File
	file_Experiment_proto_rawDesc = nil
	file_Experiment_proto_goTypes = nil
	file_Experiment_proto_depIdxs = nil
}
