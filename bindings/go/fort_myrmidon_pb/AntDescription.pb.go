// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: AntDescription.proto

package fort_myrmidon_pb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AntDisplayState int32

const (
	AntDisplayState_VISIBLE AntDisplayState = 0
	AntDisplayState_HIDDEN  AntDisplayState = 1
	AntDisplayState_SOLO    AntDisplayState = 2
)

// Enum value maps for AntDisplayState.
var (
	AntDisplayState_name = map[int32]string{
		0: "VISIBLE",
		1: "HIDDEN",
		2: "SOLO",
	}
	AntDisplayState_value = map[string]int32{
		"VISIBLE": 0,
		"HIDDEN":  1,
		"SOLO":    2,
	}
)

func (x AntDisplayState) Enum() *AntDisplayState {
	p := new(AntDisplayState)
	*p = x
	return p
}

func (x AntDisplayState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AntDisplayState) Descriptor() protoreflect.EnumDescriptor {
	return file_AntDescription_proto_enumTypes[0].Descriptor()
}

func (AntDisplayState) Type() protoreflect.EnumType {
	return &file_AntDescription_proto_enumTypes[0]
}

func (x AntDisplayState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AntDisplayState.Descriptor instead.
func (AntDisplayState) EnumDescriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{0}
}

type UserDefinedPose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector2D `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Angle    float64   `protobuf:"fixed64,2,opt,name=angle,proto3" json:"angle,omitempty"`
}

func (x *UserDefinedPose) Reset() {
	*x = UserDefinedPose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefinedPose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedPose) ProtoMessage() {}

func (x *UserDefinedPose) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedPose.ProtoReflect.Descriptor instead.
func (*UserDefinedPose) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{0}
}

func (x *UserDefinedPose) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UserDefinedPose) GetAngle() float64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type Identification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int32                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Start           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Start,proto3" json:"Start,omitempty"`
	End             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=End,proto3" json:"End,omitempty"`
	TagSize         float64              `protobuf:"fixed64,4,opt,name=TagSize,proto3" json:"TagSize,omitempty"`
	Userdefinedpose *UserDefinedPose     `protobuf:"bytes,5,opt,name=userdefinedpose,proto3" json:"userdefinedpose,omitempty"`
}

func (x *Identification) Reset() {
	*x = Identification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identification) ProtoMessage() {}

func (x *Identification) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identification.ProtoReflect.Descriptor instead.
func (*Identification) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{1}
}

func (x *Identification) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Identification) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Identification) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Identification) GetTagSize() float64 {
	if x != nil {
		return x.TagSize
	}
	return 0
}

func (x *Identification) GetUserdefinedpose() *UserDefinedPose {
	if x != nil {
		return x.Userdefinedpose
	}
	return nil
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=R,proto3" json:"R,omitempty"`
	G uint32 `protobuf:"varint,2,opt,name=G,proto3" json:"G,omitempty"`
	B uint32 `protobuf:"varint,3,opt,name=B,proto3" json:"B,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{2}
}

func (x *Color) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Color) GetG() uint32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Color) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

type AntShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capsule *Capsule `protobuf:"bytes,1,opt,name=capsule,proto3" json:"capsule,omitempty"`
	Type    uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AntShape) Reset() {
	*x = AntShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntShape) ProtoMessage() {}

func (x *AntShape) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntShape.ProtoReflect.Descriptor instead.
func (*AntShape) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{3}
}

func (x *AntShape) GetCapsule() *Capsule {
	if x != nil {
		return x.Capsule
	}
	return nil
}

func (x *AntShape) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AntNamedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Value *AntStaticValue      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Name  string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AntNamedValue) Reset() {
	*x = AntNamedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntNamedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntNamedValue) ProtoMessage() {}

func (x *AntNamedValue) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntNamedValue.ProtoReflect.Descriptor instead.
func (*AntNamedValue) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{4}
}

func (x *AntNamedValue) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AntNamedValue) GetValue() *AntStaticValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AntNamedValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AntDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int32             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Shape           []*AntShape       `protobuf:"bytes,2,rep,name=shape,proto3" json:"shape,omitempty"`
	Identifications []*Identification `protobuf:"bytes,3,rep,name=identifications,proto3" json:"identifications,omitempty"`
	Color           *Color            `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	DisplayState    AntDisplayState   `protobuf:"varint,5,opt,name=displayState,proto3,enum=fort.myrmidon.pb.AntDisplayState" json:"displayState,omitempty"`
	NamedValues     []*AntNamedValue  `protobuf:"bytes,6,rep,name=namedValues,proto3" json:"namedValues,omitempty"`
}

func (x *AntDescription) Reset() {
	*x = AntDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AntDescription_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntDescription) ProtoMessage() {}

func (x *AntDescription) ProtoReflect() protoreflect.Message {
	mi := &file_AntDescription_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntDescription.ProtoReflect.Descriptor instead.
func (*AntDescription) Descriptor() ([]byte, []int) {
	return file_AntDescription_proto_rawDescGZIP(), []int{5}
}

func (x *AntDescription) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AntDescription) GetShape() []*AntShape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *AntDescription) GetIdentifications() []*Identification {
	if x != nil {
		return x.Identifications
	}
	return nil
}

func (x *AntDescription) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *AntDescription) GetDisplayState() AntDisplayState {
	if x != nil {
		return x.DisplayState
	}
	return AntDisplayState_VISIBLE
}

func (x *AntDescription) GetNamedValues() []*AntNamedValue {
	if x != nil {
		return x.NamedValues
	}
	return nil
}

var File_AntDescription_proto protoreflect.FileDescriptor

var file_AntDescription_proto_rawDesc = []byte{
	0x0a, 0x14, 0x41, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72,
	0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x32, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x64, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x0e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x30,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x61, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x54, 0x61, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x50, 0x6f, 0x73, 0x65, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0c,
	0x0a, 0x01, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x52, 0x12, 0x0c, 0x0a, 0x01,
	0x47, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x47, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x42, 0x22, 0x53, 0x0a, 0x08, 0x41, 0x6e, 0x74, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72,
	0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x52, 0x07, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x0d, 0x41, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x0e,
	0x41, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65,
	0x12, 0x4a, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d, 0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6d,
	0x79, 0x72, 0x6d, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a, 0x34, 0x0a, 0x0f, 0x41, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4f, 0x4c, 0x4f, 0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_AntDescription_proto_rawDescOnce sync.Once
	file_AntDescription_proto_rawDescData = file_AntDescription_proto_rawDesc
)

func file_AntDescription_proto_rawDescGZIP() []byte {
	file_AntDescription_proto_rawDescOnce.Do(func() {
		file_AntDescription_proto_rawDescData = protoimpl.X.CompressGZIP(file_AntDescription_proto_rawDescData)
	})
	return file_AntDescription_proto_rawDescData
}

var file_AntDescription_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_AntDescription_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_AntDescription_proto_goTypes = []interface{}{
	(AntDisplayState)(0),        // 0: fort.myrmidon.pb.AntDisplayState
	(*UserDefinedPose)(nil),     // 1: fort.myrmidon.pb.UserDefinedPose
	(*Identification)(nil),      // 2: fort.myrmidon.pb.Identification
	(*Color)(nil),               // 3: fort.myrmidon.pb.Color
	(*AntShape)(nil),            // 4: fort.myrmidon.pb.AntShape
	(*AntNamedValue)(nil),       // 5: fort.myrmidon.pb.AntNamedValue
	(*AntDescription)(nil),      // 6: fort.myrmidon.pb.AntDescription
	(*Vector2D)(nil),            // 7: fort.myrmidon.pb.Vector2d
	(*timestamp.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*Capsule)(nil),             // 9: fort.myrmidon.pb.Capsule
	(*AntStaticValue)(nil),      // 10: fort.myrmidon.pb.AntStaticValue
}
var file_AntDescription_proto_depIdxs = []int32{
	7,  // 0: fort.myrmidon.pb.UserDefinedPose.position:type_name -> fort.myrmidon.pb.Vector2d
	8,  // 1: fort.myrmidon.pb.Identification.Start:type_name -> google.protobuf.Timestamp
	8,  // 2: fort.myrmidon.pb.Identification.End:type_name -> google.protobuf.Timestamp
	1,  // 3: fort.myrmidon.pb.Identification.userdefinedpose:type_name -> fort.myrmidon.pb.UserDefinedPose
	9,  // 4: fort.myrmidon.pb.AntShape.capsule:type_name -> fort.myrmidon.pb.Capsule
	8,  // 5: fort.myrmidon.pb.AntNamedValue.time:type_name -> google.protobuf.Timestamp
	10, // 6: fort.myrmidon.pb.AntNamedValue.value:type_name -> fort.myrmidon.pb.AntStaticValue
	4,  // 7: fort.myrmidon.pb.AntDescription.shape:type_name -> fort.myrmidon.pb.AntShape
	2,  // 8: fort.myrmidon.pb.AntDescription.identifications:type_name -> fort.myrmidon.pb.Identification
	3,  // 9: fort.myrmidon.pb.AntDescription.color:type_name -> fort.myrmidon.pb.Color
	0,  // 10: fort.myrmidon.pb.AntDescription.displayState:type_name -> fort.myrmidon.pb.AntDisplayState
	5,  // 11: fort.myrmidon.pb.AntDescription.namedValues:type_name -> fort.myrmidon.pb.AntNamedValue
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_AntDescription_proto_init() }
func file_AntDescription_proto_init() {
	if File_AntDescription_proto != nil {
		return
	}
	file_Shapes_proto_init()
	file_AntMetadata_proto_init()
	file_Vector2d_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_AntDescription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefinedPose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AntDescription_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AntDescription_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AntDescription_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AntDescription_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntNamedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AntDescription_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AntDescription_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_AntDescription_proto_goTypes,
		DependencyIndexes: file_AntDescription_proto_depIdxs,
		EnumInfos:         file_AntDescription_proto_enumTypes,
		MessageInfos:      file_AntDescription_proto_msgTypes,
	}.Build()
	File_AntDescription_proto = out.File
	file_AntDescription_proto_rawDesc = nil
	file_AntDescription_proto_goTypes = nil
	file_AntDescription_proto_depIdxs = nil
}
