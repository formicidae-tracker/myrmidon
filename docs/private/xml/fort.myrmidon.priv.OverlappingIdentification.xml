<?xml version='1.0' encoding='utf-8'?>
<class id="fort::myrmidon::priv::OverlappingIdentification" interface="true" name="OverlappingIdentification" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>An std::exception when tow Identification overlaps in time.</brief>
  <doc>Two <ref ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification">fort::myrmidon::priv::Identification</ref> overlaps in time if they have
overlapping boundary and they either use the same &amp;lt;TagID&amp;gt; or targets
the same <ref ref="fort::myrmidon::priv::Ant#fort::myrmidon::priv::Ant">fort::myrmidon::priv::Ant</ref>. This is an invariant condition that should
never happen and modification that will break this invariant will
throw this exception.</doc>
  <base access="public">
    <type name="std::runtime_error" />
  </base>
  <constructor abstract="yes" id="fort::myrmidon::priv::OverlappingIdentification::OverlappingIdentification" name="OverlappingIdentification">
    <argument id="fort::myrmidon::priv::OverlappingIdentification::OverlappingIdentification::a" name="a">
      <type name="Identification" qualifier=" const &amp;" ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification" />
    </argument>
    <argument id="fort::myrmidon::priv::OverlappingIdentification::OverlappingIdentification::b" name="b">
      <type name="Identification" qualifier=" const &amp;" ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification" />
    </argument>
  </constructor>
</class>
