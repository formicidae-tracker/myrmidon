<?xml version='1.0' encoding='utf-8'?>
<class id="fort::myrmidon::priv::ProtobufReadWriter" interface="true" name="ProtobufReadWriter" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Saves Experiment using protocol buffer</brief>
  <doc>This <ref ref="fort::myrmidon::priv::ExperimentReadWriter#fort::myrmidon::priv::ExperimentReadWriter">fort::myrmidon::priv::ExperimentReadWriter</ref> and <ref ref="fort::myrmidon::priv::ExperimentReadWriter#fort::myrmidon::priv::ExperimentReadWriter::ExperimentReadWriter">fort::myrmidon::priv::ExperimentReadWriter::ExperimentReadWriter</ref> read and saves data using protocol
buffer.</doc>
  <base access="public">
    <type name="ExperimentReadWriter" ref="fort::myrmidon::priv::ExperimentReadWriter#fort::myrmidon::priv::ExperimentReadWriter" />
    <brief>A IO Abstraction to Read and Write an Experiment on the filesystem</brief>
  </base>
  <constructor abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::ProtobufReadWriter" name="ProtobufReadWriter">
    <brief>Constructor</brief>
  </constructor>
  <destructor abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::~ProtobufReadWriter" name="~ProtobufReadWriter" virtual="yes">
    <brief>Destructor</brief>
  </destructor>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::DoOpen" name="DoOpen" override="yes" virtual="yes">
    <brief>Implements DoOpen</brief>
    <return>
      <type name="ExperimentPtr" ref="fort::myrmidon::priv#fort::myrmidon::priv::ExperimentPtr" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::DoOpen::filename" name="filename">
      <type name="std::filesystem::__cxx11::path" qualifier=" const &amp;" />
    </argument>
    <override name="ExperimentReadWriter::DoOpen" ref="fort::myrmidon::priv::ExperimentReadWriter#fort::myrmidon::priv::ExperimentReadWriter::DoOpen" />
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::DoSave" name="DoSave" override="yes" virtual="yes">
    <brief>Implements DoSave</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::DoSave::experiment" name="experiment">
      <type name="Experiment" qualifier=" const &amp;" ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::DoSave::filename" name="filename">
      <type name="std::filesystem::__cxx11::path" qualifier=" const &amp;" />
    </argument>
    <override name="ExperimentReadWriter::DoSave" ref="fort::myrmidon::priv::ExperimentReadWriter#fort::myrmidon::priv::ExperimentReadWriter::DoSave" />
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::LoadAnt" name="LoadAnt" static="yes">
    <brief>Loads an Ant from a protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadAnt::e" name="e">
      <doc>the <ref ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment">fort::myrmidon::priv::Experiment</ref> that will own the Ant</doc>
      <type name="Experiment" qualifier=" &amp;" ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadAnt::pb" name="pb">
      <doc>the serialized data</doc>
      <type name="pb::AntMetadata" qualifier=" const &amp;" ref="fort::myrmidon::pb::AntMetadata#fort::myrmidon::pb::AntMetadata" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::LoadExperiment" name="LoadExperiment" static="yes">
    <brief>Loads an Experiment from a protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadExperiment::e" name="e">
      <doc>the empty Experiment to load data to</doc>
      <type name="Experiment" qualifier=" &amp;" ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadExperiment::pb" name="pb">
      <doc>the protobuf message to read from</doc>
      <type name="pb::Experiment" qualifier=" const &amp;" ref="fort::myrmidon::pb::Experiment#fort::myrmidon::pb::Experiment" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::LoadFramePointer" name="LoadFramePointer" static="yes">
    <brief>Loads a FramePointer from protobuf message</brief>
    <return>
      <type name="FramePointerPtr" ref="fort::myrmidon::priv#fort::myrmidon::priv::FramePointerPtr" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadFramePointer::pb" name="pb">
      <doc>the message to save to</doc>
      <type name="pb::FramePointer" qualifier=" const &amp;" ref="fort::myrmidon::pb::FramePointer#fort::myrmidon::pb::FramePointer" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::LoadIdentification" name="LoadIdentification" static="yes">
    <brief>Loads an Identification from protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadIdentification::e" name="e">
      <doc>the <ref ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment">fort::myrmidon::priv::Experiment</ref> that owns the <ref ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification">fort::myrmidon::priv::Identification</ref> and the <ref ref="fort::myrmidon::priv::Ant#fort::myrmidon::priv::Ant">fort::myrmidon::priv::Ant</ref></doc>
      <type name="Experiment" qualifier=" &amp;" ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadIdentification::a" name="a">
      <doc>the <ref ref="fort::myrmidon::priv::Ant#fort::myrmidon::priv::Ant">fort::myrmidon::priv::Ant</ref> the <ref ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification">fort::myrmidon::priv::Identification</ref> points to.</doc>
      <type name="AntPtr" qualifier=" const &amp;" ref="fort::myrmidon::priv#fort::myrmidon::priv::AntPtr" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadIdentification::pb" name="pb">
      <doc>the message to read from</doc>
      <type name="pb::Identification" qualifier=" const &amp;" ref="fort::myrmidon::pb::Identification#fort::myrmidon::pb::Identification" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::LoadTrackingDataDirectory" name="LoadTrackingDataDirectory" static="yes">
    <brief>Unmarshals a TrackingDataDirectory from a protobuf message</brief>
    <return>
      <type name="TrackingDataDirectory" ref="fort::myrmidon::priv::TrackingDataDirectory#fort::myrmidon::priv::TrackingDataDirectory" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::LoadTrackingDataDirectory::pb" name="pb">
      <doc>the protobuf message to read from</doc>
      <type name="pb::TrackingDataDirectory" qualifier=" const &amp;" ref="fort::myrmidon::pb::TrackingDataDirectory#fort::myrmidon::pb::TrackingDataDirectory" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::SaveAnt" name="SaveAnt" static="yes">
    <brief>Saves an Ant to a protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveAnt::pb" name="pb">
      <doc>the message to save to</doc>
      <type name="pb::AntMetadata" qualifier=" &amp;" ref="fort::myrmidon::pb::AntMetadata#fort::myrmidon::pb::AntMetadata" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveAnt::a" name="a">
      <doc>the <ref ref="fort::myrmidon::priv::Ant#fort::myrmidon::priv::Ant">fort::myrmidon::priv::Ant</ref> to save</doc>
      <type name="Ant" qualifier=" const &amp;" ref="fort::myrmidon::priv::Ant#fort::myrmidon::priv::Ant" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::SaveExperiment" name="SaveExperiment" static="yes">
    <brief>Saves an Experiment to a protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveExperiment::pb" name="pb">
      <doc>the protobuf message</doc>
      <type name="pb::Experiment" qualifier=" &amp;" ref="fort::myrmidon::pb::Experiment#fort::myrmidon::pb::Experiment" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveExperiment::e" name="e">
      <doc>the <ref ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment">fort::myrmidon::priv::Experiment</ref> to save</doc>
      <type name="Experiment" qualifier=" const &amp;" ref="fort::myrmidon::priv::Experiment#fort::myrmidon::priv::Experiment" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::SaveFramePointer" name="SaveFramePointer" static="yes">
    <brief>Saves a FramePointer to protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveFramePointer::pb" name="pb">
      <doc>the message to save to</doc>
      <type name="pb::FramePointer" qualifier=" &amp;" ref="fort::myrmidon::pb::FramePointer#fort::myrmidon::pb::FramePointer" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveFramePointer::fp" name="fp">
      <doc>the <ref ref="fort::myrmidon::priv::FramePointer#fort::myrmidon::priv::FramePointer">fort::myrmidon::priv::FramePointer</ref> to save to</doc>
      <type name="FramePointer" qualifier=" const &amp;" ref="fort::myrmidon::priv::FramePointer#fort::myrmidon::priv::FramePointer" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::SaveIdentification" name="SaveIdentification" static="yes">
    <brief>Saves an Identification to protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveIdentification::pb" name="pb">
      <doc>the message to save to</doc>
      <type name="pb::Identification" qualifier=" &amp;" ref="fort::myrmidon::pb::Identification#fort::myrmidon::pb::Identification" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveIdentification::ident" name="ident">
      <doc>the <ref ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification">fort::myrmidon::priv::Identification</ref> to save to</doc>
      <type name="Identification" qualifier=" const &amp;" ref="fort::myrmidon::priv::Identification#fort::myrmidon::priv::Identification" />
    </argument>
  </method>
  <method abstract="yes" id="fort::myrmidon::priv::ProtobufReadWriter::SaveTrackingDataDirectory" name="SaveTrackingDataDirectory" static="yes">
    <brief>Saves a TrackingDataDirectory to a protobuf message</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveTrackingDataDirectory::pb" name="pb">
      <doc>the protobuf message to save to</doc>
      <type name="pb::TrackingDataDirectory" qualifier=" &amp;" ref="fort::myrmidon::pb::TrackingDataDirectory#fort::myrmidon::pb::TrackingDataDirectory" />
    </argument>
    <argument id="fort::myrmidon::priv::ProtobufReadWriter::SaveTrackingDataDirectory::tdd" name="tdd">
      <doc>the <ref ref="fort::myrmidon::priv::TrackingDataDirectory#fort::myrmidon::priv::TrackingDataDirectory">fort::myrmidon::priv::TrackingDataDirectory</ref> to save</doc>
      <type name="TrackingDataDirectory" qualifier=" const &amp;" ref="fort::myrmidon::priv::TrackingDataDirectory#fort::myrmidon::priv::TrackingDataDirectory" />
    </argument>
  </method>
</class>
